<div class="row" style="margin: 0 auto;">
    <div class="row" style="margin: 0 auto;margin-bottom:20px;">
        <button type="button" class="btn btn-info userbtn" data-toggle="modal" data-target="#userModal" v-on:click="useradd">新增用户</button>
    </div>
    <div class="row" style="margin: 0 auto;">
        <form class="form-inline" role="form">
            <div class="form-group">
                <label class="sr-only" for="relname">真实姓名</label>
                真实姓名:<input type="text" class="form-control" id="relname" placeholder="请输入真实姓名">
            </div>
            <div class="form-group">
                <label class="sr-only">用户名</label>
                用户名:<input type="text" class="form-control" id="username" placeholder="请输入用户名">
            </div>
            <div class="form-group">
                <label class="sr-only" for="username">部门</label>
                部门:  <select class="form-control" id="searchdepar" class="deparlist" name="DeparementID" style="min-width:181px;"> </select>
            </div>
            <button type="button" class="btn btn-info" v-on:click="usersearch">查询</button>
        </form>
    </div>
    <div class="row" style="margin: 0 auto;">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th class="col-lg-4 col-md-4  ">真实姓名</th>
                    <th class="col-lg-4 col-md-4  ">用户名</th>
                    <th class="col-lg-2 col-md-2  ">部门</th>
                    <th class="col-lg-2 col-md-2 text-center">操作</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in userquery">
                    <td>{{ item.PersonName }}</td>
                    <td>{{ item.AccountName }}</td>
                    <td>{{ item.DeparementName }}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-info btn-sm useredit" data-toggle="modal" data-target="#userModal" v-on:click="useredit(item)">编辑</button>
                        @*<button type="button" class="btn hfgray btn-sm" v-on:click="del(item)">移除</button>*@
                    </td>
                <tr>
            </tbody>
        </table>
    </div>
</div>

<!-- 模态框（Modal） -->
<div class="modal fade" id="userModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <form role="form" id="adduserform">
                    <div class="form-group">
                        <label for="userdepar">所属部门:</label>
                        <select class="form-control" id="userdepar" name="DeparementID" v-model="usereditquery.DeparementID"></select>
                    </div>
                    <div class="form-group">
                        <label for="relname">真实姓名: </label>
                        <input type="text" class="form-control" class="relname" name="PersonName" v-model="usereditquery.PersonName" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="consotname">用 户 名 :  </label>
                        <input type="text" class="form-control"  name="name"  placeholder=""  style="display:none;">
                        <input type="password" class="form-control" name="namePwd"  placeholder="" style="display:none;" >
                        <input type="text" class="form-control" id="consotname" name="AccountName" v-model="usereditquery.AccountName" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="password">密     码 :  </label>
                        <input type="password" class="form-control" id="password" name="Pwd" v-model="usereditquery.Pwd" placeholder="">
                    </div>
                    <div class="form-group">
                        <label for="pass">重复密码: </label>
                        <input type="password" class="form-control" id="pass" name="Password" placeholder="">
                    </div>
                    <button type="button" class="btn btn-info" v-on:click="ensure()">提交</button>
                    <button type="button" class="btn hfgray " data-dismiss="modal" v-on:click="cancel">关闭</button>
                </form>
            </div>
        </div>
    </div>
    <!-- /.modal-content -->
</div>



<!-- /.modal -->
@section scripts{
    <script>
        var vm = new Vue({
            el: '#content',
            data: {
                userquery: [],
                usereditquery: "",
                searchquery: { PersonName: "", AccountName: "", DeparementID: "" },
            },
            methods: {
                refurbish: function () {
                    var _self = this; var url = "@Url.Content("~/user/searchuser")";
                    var callback = function (data) {
                        if (data.Success == 1) {
                            _self.userquery = data.Obj;
                            checkdataquery(_self.userquery);
                        }
                    };
                    ggajax(url, "", callback);
                    pubdeparlist('#searchdepar');//搜索栏部门 加载即更新
                    pubdeparlist('#userdepar');//搜索栏部门 加载即更新
                },
                useradd: function () {
                    $('#adduserform').data('bootstrapValidator').resetForm();//表单重置
                    //clearobj(this.usereditquery);
                    var _self = this;
                    _self.usereditquery = {};
                    this.usereditquery.urltype = "@Url.Content("~/user/insert")";
                },
                useredit: function (row) {
                    $('#adduserform').data('bootstrapValidator').resetForm();//表单重置
                    var _self = this;
                    _self.usereditquery = {};
                    _self.usereditquery.DeparementID = row.CustomerDeparementID;
                    _self.usereditquery.DeparementName = row.DeparementName;
                    _self.usereditquery.PersonName = row.PersonName;
                    _self.usereditquery.AccountName = row.AccountName;
                    _self.usereditquery.Id = row.Id;
                    _self.usereditquery.urltype = "@Url.Content("~/user/update")";
                },
                ensure: function () {
                    $('#adduserform').data('bootstrapValidator').updateStatus('Password', 'NOT_VALIDATED').validateField('Password');
                    $('#adduserform').data('bootstrapValidator').validateField('Password');
                    $('#adduserform').data('bootstrapValidator').validate();
                    if ($('#adduserform').data('bootstrapValidator').isValid()) {
                        var _self = this;
                        var callback = function (data) {
                           
                            if (data.Success == 1) {
                                $('#userModal').modal('hide');
                                $("#pass").val('');
                                $('#adduserform').data('bootstrapValidator').resetForm();//表单重置*/
                                _self.refurbish();
                            }else{
                                hfalert(data.Message);
                            };
                        };
                        ggajax(_self.usereditquery.urltype, _self.usereditquery, callback);
                    }
                    else {
                        $('#adduserform').data('bootstrapValidator').validate();
                    }
                },
                usersearch: function () {
                    var _self = this;
                    var relname = $("#relname").val();
                    var username = $("#username").val();
                    var searchdepar = $('#searchdepar').val();
                    _self.searchquery.PersonName = relname;
                    _self.searchquery.AccountName = username;
                    _self.searchquery.DeparementID = searchdepar;
                    if (relname == '' && username == '' && searchdepar == "请选择部门") {
                        hfalert('请输入查询内容');
                        return false
                    }
                    var _self = this;
                    var callback = function (data) {
                        if (data.Success) { _self.userquery = data.Obj; }else{ hfalert(data.Message);};
                       
                    };
                    var _self = this;
                    ggajax('@Url.Content("~/user/searchuser")', _self.searchquery, callback);
                },
                cancel: function () { $('#adduserform').data('bootstrapValidator').resetForm(true); },
                del: function (row) {
                    _self = this;
                    var callback = function (data) { if (data.Success) { _self.refurbish(); }else{hfalert(data.Message);}  };
                    ggajax('@Url.Content("~/user/delete")', { id: row.Id }, callback);
                }
            },
            created: function () { this.refurbish(); },
            mounted: function () {
                $("#user").addClass("active");
                pubload();
                $('#adduserform').bootstrapValidator({
                    message: 'This value is not valid',
                    feedbackIcons: {
                        valid: 'glyphicon glyphicon-ok',
                        invalid: 'glyphicon glyphicon-remove',
                        validating: 'glyphicon glyphicon-refresh'
                    },
                    excluded: [':disabled'],
                    fields: {
                        PersonName: {
                            validators: { notEmpty: { message: '不能为空' } }
                        },
                        AccountName: {
                            validators: { notEmpty: { message: '不能为空' } }
                        },
                        Pwd: {
                            validators: {
                                notEmpty: { message: '不能为空' },
                            }
                        },
                        Password: {
                            validators: {
                                notEmpty: {
                                    message: '不能为空'
                                },
                                identical: { field: 'Pwd', message: '两次输入不同' }
                            }
                        }
                    }
                }).on('success.form.bv', function (e) {
                    e.preventDefault();
                });
            }
        });
    </script>
}